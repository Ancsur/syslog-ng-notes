commit 120ccac213ab3a3866e47cce14e074dd22b7f881
Merge: 68343e3 9b235dc
Author: Budai Laszlo <laszlo.budai@balabit.com>
Date:   Wed Mar 2 09:35:10 2016 +0100

    Merge pull request #963 from ihrwein/port-fix-java-logger
    
    Backport of "Fix java logger"

commit 9b235dce12c67407e98fbb43eaf128c5357484f2
Author: László Várady <laszlo.varady@balabit.com>
Date:   Mon Feb 29 16:30:14 2016 +0100

    java-modules: add missing FATAL loglevel
    
    Signed-off-by: László Várady <laszlo.varady@balabit.com>

commit 3165f35164c27163a53b339169daf070aa8d5d66
Author: László Várady <laszlo.varady@balabit.com>
Date:   Mon Feb 29 15:10:23 2016 +0100

    java-modules: remove other log appenders before adding SyslogNgInternalLogger
    
    Signed-off-by: László Várady <laszlo.varady@balabit.com>

commit e12eccd56f3651177d32e4cdd298184171e1ad65
Author: László Várady <laszlo.varady@balabit.com>
Date:   Mon Feb 29 15:02:26 2016 +0100

    java-modules: fix whitespaces
    
    Signed-off-by: László Várady <laszlo.varady@balabit.com>

commit 352daa219d22702346c319a51a7f36d9e700eac6
Author: László Várady <laszlo.varady@balabit.com>
Date:   Mon Feb 29 15:04:55 2016 +0100

    java-modules: remove bogus locationInformationExists() check
    
    The getLocationInformation() function has a caching side-effect,
    the locationInformationExists() method only checks whether this cache is valid.
    
    "locationInformationExists() returns true if location information
    has been extracted."
    
    Signed-off-by: László Várady <laszlo.varady@balabit.com>

commit d2ea3ca955ecd23dc5de341aebf271396cb60d94
Author: László Várady <laszlo.varady@balabit.com>
Date:   Mon Feb 29 14:31:07 2016 +0100

    java-modules: specify minimum logging level
    
    Signed-off-by: László Várady <laszlo.varady@balabit.com>

commit 68343e37f81f6f9851d0aff018333ce5fd373e98
Merge: 87709d5 603e711
Author: Budai Laszlo <laszlo.budai@balabit.com>
Date:   Fri Feb 12 19:03:30 2016 +0100

    Merge pull request #927 from MrAnno/f/configure-java-3.7
    
    Fix java version check ('test' has '=', not '==' as operator)

commit 603e7119248fb79c8f13545649a4cd23244cb5ce
Author: David Schweikert <dws@open.ch>
Date:   Wed Feb 3 09:53:29 2016 +0100

    Makefiles: fix java version check ('test' has '=', not '==' as operator)
    Signed-off-by: David Schweikert <david@schweikert.ch>

commit 87709d5cf3d210ef7938ed235fb54fef55f20136
Merge: ccce847 adc238f
Author: Budai Laszlo <laszlo.budai@balabit.com>
Date:   Fri Feb 12 19:02:51 2016 +0100

    Merge pull request #926 from MrAnno/afprog_keep_alive_fix-3.7
    
    Fix program driver keep-alive() option linkage

commit adc238f61d451d4a3be2ff657e517eb1e64b03f7
Author: László Várady <laszlo.varady@balabit.com>
Date:   Mon Jan 11 10:16:22 2016 +0100

    afprog: fix afprogram_dd_set_keep_alive() linkage
    
    Signed-off-by: László Várady <laszlo.varady@balabit.com>

commit ccce847eeadb7cd6ff5b1a3af440c68c21ecc2ff
Merge: 8a717c7 21d23d0
Author: Budai Laszlo <laszlo.budai@balabit.com>
Date:   Fri Feb 12 19:02:25 2016 +0100

    Merge pull request #925 from MrAnno/f/patterndb_deadlock-3.7
    
    Fix possible deadlock in patterndb

commit 21d23d02dfb1f472a2a42bfac184b9fff8d1158d
Author: Juhász Viktor <viktor.juhasz@balabit.com>
Date:   Mon Dec 21 10:12:44 2015 +0100

    patterndb: the set emit function is possible to callback to the mainloop.
    
    But if the mainloop currently runs the tick_timer of the patterndb,
    it causes deadlock, because the timer wait for the patterndb's lock (held by the _pattern_db_process)
    and the emit function waits for the mainloop.
    
    Solution is, that unlock the lock, while the emit functions are run
    
    Signed-off-by: Juhász Viktor <viktor.juhasz@balabit.com>

commit 8a717c7e97a547f030836ba8cd94bb1f72a05af0
Merge: d8f1a16 44e59aa
Author: Budai Laszlo <laszlo.budai@balabit.com>
Date:   Fri Feb 12 08:56:51 2016 +0100

    Merge pull request #924 from MrAnno/fix-netmask6-filter-on-bigendian-systems-3.7
    
    Fix byteorder handling on bigendian systems in netmask6 filter

commit 44e59aa2ca393741f381fd9990470a654afcdbef
Author: Tibor Benke <tibor.benke@balabit.com>
Date:   Wed Dec 16 10:19:22 2015 +0100

    netmask6: fix byteorder handling on bigendian systems
    
    Signed-off-by: Tibor Benke <tibor.benke@balabit.com>

commit d8f1a1673190a1a0d77a7c2c5413e233d480f14f
Merge: f3debc8 3a18c01
Author: Budai Laszlo <laszlo.budai@balabit.com>
Date:   Fri Feb 12 08:56:27 2016 +0100

    Merge pull request #923 from MrAnno/f/amqp-errors-3.7
    
    Improve error handling in amqp

commit 3a18c01756e4684abf40946468ae715fe7df05fb
Author: Balazs Scheidler <balazs.scheidler@balabit.com>
Date:   Thu Nov 26 09:06:10 2015 +0100

    amqp: add error tag to amqp_basic_publish() error handler
    
    Signed-off-by: Balazs Scheidler <balazs.scheidler@balabit.com>

commit 45da122e65b01d8e6e1d0cd6ef8f4322b9e884ef
Author: Balazs Scheidler <balazs.scheidler@balabit.com>
Date:   Thu Nov 26 09:05:57 2015 +0100

    amqp: fix error tag not to contain a space
    
    Signed-off-by: Balazs Scheidler <balazs.scheidler@balabit.com>

commit 122579667ee13dae96ae0afb9b68beeb5c6474d5
Author: Balazs Scheidler <balazs.scheidler@balabit.com>
Date:   Thu Nov 26 09:05:44 2015 +0100

    amqp: simplify msg_error() calls
    
    Signed-off-by: Balazs Scheidler <balazs.scheidler@balabit.com>

commit 405fd54b17668207ec0e683a734971474b72602a
Author: Balazs Scheidler <balazs.scheidler@balabit.com>
Date:   Thu Nov 26 09:05:08 2015 +0100

    amqp: white space fixes
    
    Signed-off-by: Balazs Scheidler <balazs.scheidler@balabit.com>

commit f3debc8e0ccbcbc3d3289b038f036e886fd9cadf
Merge: 6228e61 e09a5ad
Author: Budai Laszlo <laszlo.budai@balabit.com>
Date:   Fri Feb 12 08:56:14 2016 +0100

    Merge pull request #922 from MrAnno/f/fix-afsocket-integer-underflow-3.7
    
    afsocket: Fix an integer underflow.

commit e09a5ad0e668aab142f36bddde91c6bd55635ca0
Author: Hanno <hanno@gentoo.org>
Date:   Thu Nov 12 13:28:19 2015 +0100

    afsocket: Fix an integer underflow.
    
    The reason is that the function return value is a -1 on error, however
    the variable to store that is unsigned, therefore it is unable to store
    the error value and will underflow. The subsequent check will therefore
    not catch the error.
    To fix this change content_len from gsize (unsigned) to gssigned
    (signed).
    
    This was found with Address Sanitizer.
    
    Signed-off-by: Hanno Böck <hanno@hboeck.de>

commit 6228e6130b113dffc4b1327ba5f5670b4a710e44
Merge: 5508650 124e069
Author: Budai Laszlo <laszlo.budai@balabit.com>
Date:   Fri Feb 12 08:55:22 2016 +0100

    Merge pull request #921 from MrAnno/f/fix-suppress-deadlock-3.7
    
    F/fix suppress deadlock

commit 124e069c163ff31de64187d77aa2c1f5bad30264
Author: Balazs Scheidler <balazs.scheidler@balabit.com>
Date:   Tue Nov 17 17:43:01 2015 +0100

    logwriter: add an else clause to log_writer_is_suppressed()
    
    I was trying heavily to make this function more readable, but due to
    the modality in locking, it is difficult to extract anything further.
    
    I've added an else clause, which is slightly better for me, but that's
    how far I could get now.
    
    Signed-off-by: Balazs Scheidler <balazs.scheidler@balabit.com>

commit 83d599225db80d1deb0c98f966efce1cb92518aa
Author: Balazs Scheidler <balazs.scheidler@balabit.com>
Date:   Tue Nov 17 17:34:35 2015 +0100

    logwriter: extract a few functions from log_writer_is_msg_suppressed()
    
    Signed-off-by: Balazs Scheidler <balazs.scheidler@balabit.com>

commit ff1985a1dc26a9ba938a677c66ab9e50ac492b5b
Author: Balazs Scheidler <balazs.scheidler@balabit.com>
Date:   Tue Nov 17 17:14:21 2015 +0100

    logwriter: resolve deadlock on suppress_lock
    
    There's a strict ordering requirement between suppress_lock and interacting
    with the main loop. The reason is that the main thread (running the
    main loop) sometimes acquires suppress_lock (at suppress timer
    expiration) and while blocking on suppress_lock it cannot service
    main_loop_calls()
    
    This patch makes it sure that ml_batched_timer_update/cancel calls are
    only done with the suppress lock released.
    
    If we do this, we might have a few unfortunate side effects due to races
    that this patch also tries to handle:
    
    Two messages race, one of these matches the recorded last message,
    the other doesn't. In this case, moving the update on the suppress_timer
    outside of the lock region might cause two different races:
    
    1) matching message comes first, then non-matching
    
    This case the suppress_lock protected region decides that the suppress
    timer needs to fire (#1) and then the other decides that it needs to
    be cancelled. (#2)
    
    If these are processed in order, then we are the same as if the two was
    also protected by the mutex (which is ok)
    
    If they are reversed, e.g. we first cancels the timer and the second arms it,
    then we might have a timer wakeup which will find no suppressed messages
    to report (as the non-matching message will set last_msg_count to zero). This
    spurious wakeup should be handled by the expiration callback.
    
    1) non-matching message comes first, then matching
    
    This is simply a message reordering case, e.g. we don't
    want any suppressions to be emitted.
    
    In this case the locked regions finds that neither messages matched
    the recorded one, thus both times they decide to cancel the timer, which
    is ok. Timer cancellation can be reordered as they will have the same
    effect anyway.
    
    Signed-off-by: Balazs Scheidler <balazs.scheidler@balabit.com>

commit b4159c030a495516a541e370150571e4ae0b5ed8
Author: Balazs Scheidler <balazs.scheidler@balabit.com>
Date:   Tue Nov 17 08:37:39 2015 +0100

    logwriter: remove ml_batched_timer_cancel() from log_writer_release_last_message()
    
    _release_last_message should stick to its single responsibility, releasing
    the last message that we potentially want to suppress. Coupling it with
    suppress timer manipulation is a mistake, that should be handled by
    higher levels.
    
    Signed-off-by: Balazs Scheidler <balazs.scheidler@balabit.com>

commit 9e8d6cd471cdbc48d141f5d88202ee84398261dc
Merge: 0fb9df4 15259a7
Author: Budai Laszlo <laszlo.budai@balabit.com>
Date:   Wed Nov 4 06:56:35 2015 +0100

    Merge pull request #751 from dnsjts/fix-log-msg-ack-cached-abort
    
    logmsg: Fix a logmsg_cached_abort assignment

commit 15259a738b0b72ef36f5d1ed3811fee83031cae0
Author: MÓZES Ádám István <adam.mozes@balabit.com>
Date:   Wed Oct 28 15:19:42 2015 +0100

    logmsg: Fix a logmsg_cached_abort assignment
    
    Explanation for the diff:
     * `#define ACKTYPE_TO_ABORTFLAG(x) (x == AT_ABORTED ? 1 : 0)`
     * AT_ABORTED is equal to 2
    
    Therefore the second check will fail always.
    
    This issue has been found by Coverity Scan.
    CID: 41449
    Related Common Weakness Enumeration: CWE-569.
    
    The report can be found here:
    https://scan4.coverity.com/
    
    Signed-off-by: MÓZES Ádám István <adam.mozes@balabit.com>

